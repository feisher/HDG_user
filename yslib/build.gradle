apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
kapt {
    arguments {
        arg("moduleName", project.getName())
    }
}
def configs = rootProject.ext.android
def librarys = rootProject.ext.dependencies
android {
    compileSdkVersion configs["compileSdkVersion"]
    defaultConfig {
        versionCode configs["versionCode"]
        versionName configs["versionName"]
        minSdkVersion configs["minSdkVersion"]
        targetSdkVersion configs["targetSdkVersion"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "zh"
        multiDexEnabled true
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
        ndk {
            abiFilters "armeabi"//, "armeabi-v7a","arm64-v8a" //,"mips","x86" //
        }
    }
    buildTypes {
        release {
            zipAlignEnabled true// Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestApi('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testApi 'junit:junit:4.12'
    api librarys["appcompat-v7"]
    api librarys["multidex"]
    api librarys["toast"]
    api librarys["dialog"]
    api librarys["http"]
    api librarys["rxjava2"]
    api librarys["gson"]
    api librarys["eventbus"]
    api librarys["cockroach"]
    api librarys["glide"]
    api librarys["kotlin"]
//    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api librarys["arouter"]
//    annotationProcessor librarys["arouter-compiler"]
    kapt librarys["arouter-compiler"]
}
repositories {
    mavenCentral()
}
